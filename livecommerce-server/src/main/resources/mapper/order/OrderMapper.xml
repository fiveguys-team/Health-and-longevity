<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.example.livecommerce_server.order.mapper.OrderMapper">
    <select id="findOrderPageByProductId" resultType="OrderPageDTO">
        SELECT p.product_id,
               p.price,
               p.name AS product_name,
               p.stock_count,
               p.product_image,
               c.name AS category_name
        FROM PRODUCT p
                 JOIN CATEGORY c ON p.category_id = c.category_id
        WHERE p.product_id = #{productId}
    </select>

    <insert id="insertOrder" parameterType="OrderInsertDTO">
        INSERT INTO ORDERS_M (order_id,
                              payments_id,
                              user_id,
                              order_status_code,
                              discount_amount,
                              order_date,
                              total_amount,
                              shipping_req,
                              created_at,
                              postal_code,
                              basic_address,
                              detail_address)
        VALUES (
        #{orderId},
        #{paymentId},
        #{userId},
        #{orderStatusCode},
        #{discountAmount},
        #{orderDate},
        #{totalAmount},
        #{shippingReq},
        #{createdAt},
        #{postalCode},
        #{basicAddress},
        #{detailAddress}
        )
    </insert>

    <insert id="insertOrderItems" parameterType="java.util.List">
        INSERT INTO ORDER_ITEM_D (
        order_item_id,
        order_id,
        product_id,
        quantity,
        created_at
        )
        VALUES
        <foreach collection="list" item="item" separator=",">
            (
            #{item.orderItemId},
            #{item.orderId},
            #{item.productId},
            #{item.quantity},
            #{item.createdAt}
            )
        </foreach>
    </insert>

    <update id="updateOrderStatusByOrderId" parameterType="com.example.livecommerce_server.order.dto.OrderStatusUpdateDTO">
        UPDATE orders_m
        SET order_status_code = #{status}
        WHERE order_id = #{orderId}
    </update>

    <update id="updateStockCountByOrderId" parameterType="string">
        UPDATE product p
            JOIN order_item_d oid ON p.product_id = oid.product_id
            JOIN orders_m o ON o.order_id = oid.order_id
            SET p.stock_count = p.stock_count - oid.quantity
        WHERE o.order_id = #{orderId}
          AND o.order_status_code = 'DONE'
          AND p.stock_count >= oid.quantity
    </update>

    <select id="selectDiscountRateByProductIdIfLiveOn" parameterType="string" resultType="int">
        SELECT lp.discountRate
        FROM live_product_j lp
                 JOIN live_m lm ON lp.live_id = lm.live_id
        WHERE lp.product_id = #{productId}
          AND lm.status_cd = 'ON'
    </select>

    <select id="findOrderHistoryByUserId" parameterType="int" resultMap="OrderHistoryResultMap">
        SELECT
            o.order_id,
            o.order_date,
            o.total_amount,
            p.payment_method,

            oi.order_item_id,
            oi.product_id,
            oi.quantity,

            pr.name AS product_name,
            pr.product_image,

            s.service_code,
            s.status_code AS service_status

        FROM orders_m o
                 JOIN payment_d p ON o.payments_id = p.payments_id
                 JOIN order_item_d oi ON o.order_id = oi.order_id
                 JOIN product pr ON oi.product_id = pr.product_id
                 LEFT JOIN service_m s ON oi.order_item_id = s.order_item_id

        WHERE o.user_id = #{userId}
          AND o.order_status_code = 'DONE'

        ORDER BY o.order_date DESC
    </select>

    <resultMap id="OrderHistoryResultMap" type="OrderHistoryDTO">
        <id property="orderId" column="order_id"/>
        <result property="orderDate" column="order_date"/>
        <result property="paymentMethod" column="payment_method"/>
        <result property="totalAmount" column="total_amount"/>

        <collection property="items" ofType="OrderHistoryItemDTO">
            <id property="orderItemId" column="order_item_id"/>
            <result property="productId" column="product_id"/>
            <result property="productName" column="product_name"/>
            <result property="productImage" column="product_image"/>
            <result property="quantity" column="quantity"/>
            <result property="serviceCode" column="service_code"/>
            <result property="serviceStatus" column="service_status"/>
        </collection>
    </resultMap>

</mapper>