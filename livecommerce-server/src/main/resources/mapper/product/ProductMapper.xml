<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.livecommerce_server.product.repository.ProductMapper">

  <insert id="insertProduct">
    INSERT INTO product (
      product_id,
      category_id,
      vendor_id,
      name,
      price,
      stock_count,
      status,
      product_image
    ) VALUES (
               #{productId},
               #{categoryId},
               #{vendorId},
               #{name},
               #{price},
               #{stockCount},
               #{status},
               #{productImage}
             )
  </insert>

  <update id="updateProduct">
    UPDATE product
    SET
      name = #{name},
      price = #{price},
      stock_count = #{stockCount},
      product_image = #{productImage},
      status = #{status},
      category_id = #{categoryId}
    WHERE product_id = #{productId}
  </update>

  <update id="updateStatus">
    UPDATE product
    SET status = #{status}
    WHERE product_id = #{id}
  </update>


  <select id="selectRequestedProducts">
    SELECT
      p.product_id AS id,
      p.name AS name,
      v.name AS vendor,
      p.status AS status
    FROM product p
           JOIN vendor_m v ON p.vendor_id = v.vendor_id
  </select>

  <select id="selectProductsByStatus" resultType="ProductListDTO">
    SELECT
    p.product_id AS id,
    p.name AS name,
    p.price AS price,
    p.stock_count AS stockCount,
    p.status AS status,
    p.product_image AS image,
    c.name AS category,
    v.name AS vendor
    FROM product p
    JOIN category c ON p.category_id = c.category_id
    JOIN vendor_m v ON p.vendor_id = v.vendor_id
    WHERE p.status = #{status}
  </select>



  <select id="findAdminProductDetail" parameterType="string"
    resultType="com.example.livecommerce_server.product.dto.AdminProductDetailDTO">
    SELECT
      p.product_id       AS productId,
      p.name             AS name,
      p.price            AS price,
      p.stock_count      AS stockCount,
      p.product_image    AS productImage,
      p.status           AS status,
      v.name             AS company,
      d.cert_no          AS certNo,
      d.product_name     AS productName,
      d.expiry_date      AS expiryDate,
      d.approval_date    AS approvalDate,
      d.how_to_take      AS howToTake,
      d.main_function    AS mainFunction,
      d.precautions      AS precautions,
      d.storage_method   AS storageMethod,
      d.standard         AS standard,
      d.ingredients      AS ingredients,
      p.category_id      AS categoryId
    FROM product p
           JOIN product_detail d ON p.product_id = d.product_id
           JOIN vendor_m v ON p.vendor_id = v.vendor_id
    WHERE p.product_id = #{productId}
  </select>

  <select id="findAdminProductDetailByCertNo" parameterType="string"
    resultType="com.example.livecommerce_server.product.dto.AdminProductDetailDTO">
    SELECT
      p.product_id       AS productId,
      p.name             AS name,
      p.price            AS price,
      p.stock_count      AS stockCount,
      p.product_image    AS productImage,
      p.status           AS status,
      v.name             AS company,
      d.cert_no          AS certNo,
      d.product_name     AS productName,
      d.expiry_date      AS expiryDate,
      d.approval_date    AS approvalDate,
      d.how_to_take      AS howToTake,
      d.main_function    AS mainFunction,
      d.precautions      AS precautions,
      d.storage_method   AS storageMethod,
      d.standard         AS standard,
      d.ingredients      AS ingredients,
      p.category_id      AS categoryId
    FROM product p
           JOIN product_detail d ON p.product_id = d.product_id
           JOIN vendor_m v ON p.vendor_id = v.vendor_id
    WHERE d.cert_no = #{certNo}
  </select>

  <select id="findProductsByVendorId" resultType="com.example.livecommerce_server.product.dto.ProductDTO">
    SELECT
    p.product_id AS productId,
    p.name,
    p.price,
    p.stock_count AS stockCount,
    p.status,
    v.name AS vendor               <!-- ✅ 추가 -->
    FROM product p
    JOIN vendor_m v ON p.vendor_id = v.vendor_id
    WHERE p.vendor_id = #{vendorId}
  </select>


  <select id="findProductsByVendorIdAndStatus" resultType="com.example.livecommerce_server.product.dto.ProductDTO">
    SELECT
    p.product_id AS productId,
    p.name,
    p.price,
    p.stock_count AS stockCount,
    p.status,
    v.name AS vendor               <!-- ✅ 추가 -->
    FROM product p
    JOIN vendor_m v ON p.vendor_id = v.vendor_id
    WHERE p.vendor_id = #{vendorId}
    AND p.status = #{status}
  </select>


  <select id="findProductsByProductId" parameterType="list" resultType="ProductDTO">
    SELECT
    product_id,
    category_id,
    vendor_id,
    name,
    price,
    stock_count,
    status,
    product_image
    FROM PRODUCT
    WHERE product_id IN
    <foreach collection="productIds" item="id" open="(" separator="," close=")">
      #{id}
    </foreach>
  </select>


  <!-- 유저용 승인된 상품 목록 조회 -->
  <select id="selectUserApprovedProducts" resultType="com.example.livecommerce_server.product.dto.UserProductDTO">
    SELECT
      p.product_id AS id,
      p.name AS name,
      c.name AS category,
      v.name AS vendor,
      p.product_image AS image,
      p.price AS price,
      p.stock_count AS stockCount,
      p.status AS status
    FROM product p
           JOIN category c ON p.category_id = c.category_id
           JOIN vendor_m v ON p.vendor_id = v.vendor_id
    WHERE p.status = 'APPROVED'
  </select>

  <select id="selectUserApprovedProductsFiltered"
    resultType="com.example.livecommerce_server.product.dto.UserProductDTO">
    SELECT
    p.product_id AS id,
    p.name AS name,
    c.name AS category,
    v.name AS vendor,
    p.product_image AS image,
    p.price AS price,
    p.stock_count AS stockCount,
    p.status AS status
    FROM product p
    JOIN category c ON p.category_id = c.category_id
    JOIN vendor_m v ON p.vendor_id = v.vendor_id
    WHERE p.status = #{status}
    <if test="category != null and category != ''">
      AND c.name = #{category}
    </if>
  </select>


  <!-- 상품 상세 조회 -->
  <select id="selectProductDetailUserById" resultType="com.example.livecommerce_server.product.dto.ProductDetailUserDTO">
    SELECT
    p.product_id AS id,
    p.name,
    c.name AS category,
    p.price,
    p.stock_count,
    p.product_image,
    pd.cert_no,
    pd.expiry_date,
    pd.approval_date,
    pd.how_to_take,
    pd.main_function,
    pd.precautions,
    pd.storage_method,
    pd.standard,
    pd.ingredients,
    pd.product_name,
    v.name AS vendor
    FROM product p
    JOIN product_detail pd ON p.product_id = pd.product_id
    JOIN vendor_m v ON p.vendor_id = v.vendor_id  <!-- ✅ 여기! -->
    JOIN category c ON p.category_id = c.category_id
    WHERE p.product_id = #{id}
  </select>






</mapper>
